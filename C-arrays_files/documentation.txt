Examples:

FILE *fout = fopen{"file_name.csv","w+");
if(fout == NULL) {
        perror("Could not open file_name.csv");
        return;
}

int 1=0;
fprintf(fout,"time, latitude, longitude\n");
for(i=0; i<sample_size; i++) {
        fprintf(fout, "%lld,%f,%f,]n", start_time + (time_inc * i),
                start_lat + (lat_inc * i),
                start_long + (long_inc * i));
}

fclose(fout);

//
1 FILE *fout = fopen{"file_name.csv","w+");
- fopen here means "open the file named "file_name.csv" with a write permission (w+). (It would truncate if the file already exists)
- this first line would lead to a pointer: pointers are identified by * during their declaration.
2. if(fout == NULL) = condition: if the file does not open successfully
3.  perror("Could not open file_name.csv"); = print an error message with the description of the text inside the bracket, along with other details of the error.
4. int 1=0; = if the file opens, assign the init value of i to 0
5. fprintf(fout,"time, latitude, longitude\n"); = print these words inside the file
6. fprintf(fout, "%lld,%f,%f,]n", start_time + (time_inc * i), = the output would be an integer (%lld), followed by two floatin
g point values (%f, %f)
7. fclose(fout); = close out the file when you are done updating it
